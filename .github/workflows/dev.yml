name: Dev Branch CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

# Cancel in-progress runs for same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  test-and-build:
    name: Test & Build (No Publish)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # Cache node_modules for faster installs
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Generate Prisma Client
      run: npx prisma generate

    # Cache Next.js build output
    - name: Cache Next.js build
      uses: actions/cache@v4
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-
          ${{ runner.os }}-nextjs-

    # Cache Prisma generated client
    - name: Cache Prisma Client
      uses: actions/cache@v4
      with:
        path: node_modules/.prisma
        key: ${{ runner.os }}-prisma-${{ hashFiles('prisma/schema.prisma') }}
        restore-keys: |
          ${{ runner.os }}-prisma-

    - name: Lint code
      run: npm run lint

    - name: Type check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

    # Setup Docker Buildx for advanced caching
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Cache Docker layers
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Test Docker build
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: gitlab-ci-dashboard:test
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    # Move cache to prevent it from growing indefinitely
    - name: Move Docker cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Summary
      run: |
        echo "‚úÖ All checks passed for dev branch!"
        echo "üì¶ Built successfully"
        echo "üê≥ Docker image tested"
        echo "‚ö†Ô∏è  Not publishing to Docker Hub (dev branch)"
