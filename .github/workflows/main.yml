name: Main Branch CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Manual trigger

# Cancel in-progress runs for same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  DOCKER_IMAGE: gitlab-ci-dashboard

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # Cache node_modules for faster installs
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    # Generate Prisma Client (must be before type checking)
    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Lint code
      run: npm run lint

    - name: Type check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

  docker-publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 25

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:latest
          network=host

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.USER }}/${{ env.DOCKER_IMAGE }}
        tags: |
          type=raw,value=latest
          type=sha,prefix=main-,format=short

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        provenance: mode=max
        sbom: false

    - name: Summary
      run: |
        echo "‚úÖ Docker image published to Docker Hub!"
        echo "üê≥ Image: ${{ secrets.USER }}/${{ env.DOCKER_IMAGE }}"
        echo "üè∑Ô∏è  Tags: ${{ steps.meta.outputs.tags }}"
