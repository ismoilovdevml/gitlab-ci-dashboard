version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: gitlab-dashboard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-gitlab_dashboard}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-gitlab_dashboard}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # SECURITY: Only expose to internal network, not to host
    # For external access (development), uncomment:
    # ports:
    #   - "127.0.0.1:5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-gitlab_dashboard}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gitlab-dashboard-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: gitlab-dashboard-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    # SECURITY: Only expose to internal network, not to host
    # For external access (development), uncomment:
    # ports:
    #   - "127.0.0.1:6379:6379"
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gitlab-dashboard-network

  # Next.js Application
  app:
    image: ismoilovdevml/gitlab-ci-dashboard:latest
    container_name: gitlab-dashboard-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-gitlab_dashboard}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-gitlab_dashboard}?schema=public

      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379

      # App Config
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      NEXT_PUBLIC_GITLAB_URL: ${NEXT_PUBLIC_GITLAB_URL:-https://gitlab.com}

      # Admin User (Auto-created on first run)
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}

      # Security
      SESSION_SECRET: ${SESSION_SECRET}
    ports:
      - "3000:3000"
    networks:
      - gitlab-dashboard-network
    # Run migrations and seed before starting app
    command: >
      sh -c "
        echo '🔍 Waiting for database...' &&
        while ! nc -z postgres 5432; do sleep 1; done &&
        echo '✅ Database ready!' &&
        echo '🔄 Running migrations...' &&
        npx prisma db push --skip-generate &&
        echo '🌱 Creating admin user from .env...' &&
        npx tsx prisma/seed.ts || echo '⚠️  Admin already exists or seed failed' &&
        echo '🚀 Starting app...' &&
        node server.js
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  gitlab-dashboard-network:
    driver: bridge
